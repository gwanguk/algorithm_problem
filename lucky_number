#include <iostream>
#include <algorithm>
#include <functional>
#include <stdio.h>
#include <list>
#include <string>
#include <map>
using namespace std;

string ret;

map<char, int> alpha;
int cnt = 0;
int N;
int sol = 0;
void func(string &s) {
	map<char, int>::iterator iter;
	for (iter = alpha.begin(); iter != alpha.end(); iter++)
	{
		if (iter->second > 0 &&s.back()!=iter->first)
		{
			char tmp = iter->first;
			s += tmp;
			iter->second--;
			cnt++;
			if (cnt == N)
			{
				sol++;
				iter->second++;
				cnt--;
				//cout << s << endl;
				s.pop_back();
			}
			else
			{
				func(s);
				iter->second++;
				cnt--;
				s.pop_back();
			}
		}
	}

}

void Func(string &s)
{
	map<char, int>::iterator iter;
	if (N == 1)
	{
		return;
	}

	for (iter=alpha.begin();iter!=alpha.end();iter++)
	{
		if (iter->second > 0)
		{
			char tmp = iter->first;
			s += tmp;
			iter->second--;
			cnt++;
			{
				func(s);
				iter->second++;
				cnt--;
				s.pop_back();
			}
		}
	}
}

int main(void) {

	string s;
	cin >> s;
	N = s.length();
	string::iterator iter;
	for (iter = s.begin(); iter != s.end(); iter++)
	{
		if (alpha.find(*iter) == alpha.end())
			alpha.insert(pair<char, int>(*iter, 1));
		else
			alpha.at((*iter)) += 1  ;
		//alpha[*iter]++;
	}
	Func(ret);
	if (N == 1)
		sol = 1;
	cout << sol << endl;
	return 0;	// 정상종료 시 반드시 0을 리턴해야 합니다.
}
